ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.main.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 696E6974 		.ascii	"initialized UART\015\000"
  20      69616C69 
  20      7A656420 
  20      55415254 
  20      0D00
  21 0012 0000     		.align	2
  22              	.LC1:
  23 0014 75736553 		.ascii	"useSPI3Mutex\000"
  23      5049334D 
  23      75746578 
  23      00
  24 0021 000000   		.align	2
  25              	.LC2:
  26 0024 77696669 		.ascii	"wifiMsgQ\000"
  26      4D736751 
  26      00
  27 002d 000000   		.align	2
  28              	.LC3:
  29 0030 77696669 		.ascii	"wifiMsgHandle\000"
  29      4D736748 
  29      616E646C 
  29      6500
  30 003e 0000     		.align	2
  31              	.LC4:
  32 0040 77696669 		.ascii	"wifiMsgGet\000"
  32      4D736747 
  32      657400
  33 004b 00       		.align	2
  34              	.LC5:
  35 004c 73657276 		.ascii	"servoPosHandle\000"
  35      6F506F73 
  35      48616E64 
  35      6C6500
  36 005b 00       		.align	2
  37              	.LC6:
  38 005c 64656661 		.ascii	"defaultTask\000"
  38      756C7454 
  38      61736B00 
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 2


  39              		.section	.text.main,"ax",%progbits
  40              		.align	1
  41              		.global	main
  42              		.arch armv7e-m
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	main:
  49              	.LFB322:
  50              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                             www.st.com/SLA0044
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "cmsis_os.h"
  24:Src/main.c    **** #include "FreeRTOS.h"
  25:Src/main.c    **** #include "stm32l4xx_hal_uart.h"
  26:Src/main.c    **** #include "Hardware_Init.h"
  27:Src/main.c    **** #include "Analog_PWM_Functions.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** //#include "../Stolen_Header_Files/httpclient.h"
  30:Src/main.c    **** //#include "../Stolen_Header_Files/CustomUserFunctions.h"
  31:Src/main.c    **** //#include "httpclient.h"
  32:Src/main.c    **** #include "CustomUserFunctions.h"
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN Includes */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END Includes */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PTD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PD */
  46:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 3


  47:Src/main.c    **** //#define B1_Pin GPIO_PIN_13
  48:Src/main.c    **** //#define B1_GPIO_Port GPIOC
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PD */
  51:Src/main.c    **** 
  52:Src/main.c    **** //GLOBAL VARIABLES
  53:Src/main.c    **** 
  54:Src/main.c    **** //RTC_HandleTypeDef hrtc;
  55:Src/main.c    **** //RNG_HandleTypeDef hrng;
  56:Src/main.c    **** net_hnd_t         hnet; /* Is initialized by cloud_main(). */
  57:Src/main.c    **** 
  58:Src/main.c    **** #define USE_WIFI
  59:Src/main.c    **** #define HTTPCLIENT
  60:Src/main.c    **** 
  61:Src/main.c    **** 
  62:Src/main.c    **** //**************************MAIL/MSG QUEUE DEFS****************************
  63:Src/main.c    **** 
  64:Src/main.c    **** //MEMORY POOLS!!!
  65:Src/main.c    **** typedef struct {
  66:Src/main.c    **** 	uint8_t Buf[32];
  67:Src/main.c    **** 	uint8_t Idx;
  68:Src/main.c    **** } MEM_BLOCK_t;
  69:Src/main.c    **** 
  70:Src/main.c    **** osMessageQueueId_t wifiMsgQID;
  71:Src/main.c    **** 
  72:Src/main.c    **** osThreadId_t wifiMsgHandleHandle;
  73:Src/main.c    **** osThreadId_t wifiMsgGetHandle;
  74:Src/main.c    **** osThreadId_t servoDestHandleHandle;
  75:Src/main.c    **** osThreadId_t servoPosHandleHandle;
  76:Src/main.c    **** osMutexId_t useSPI3MutexHandle;
  77:Src/main.c    **** /* USER CODE BEGIN PV */
  78:Src/main.c    **** 
  79:Src/main.c    **** osThreadId_t defaultTask;
  80:Src/main.c    **** TIM_HandleTypeDef htim15;
  81:Src/main.c    **** TIM_HandleTypeDef htim4;
  82:Src/main.c    **** TIM_HandleTypeDef htim16;
  83:Src/main.c    **** 
  84:Src/main.c    **** //osPoolDef(MemPool, 8, MEM_BLOCK);
  85:Src/main.c    **** 
  86:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    **** void parseWifiMsg(void *argument);
  89:Src/main.c    **** void getWifiMsg(void *argument);
  90:Src/main.c    **** void setServoDestinations(void *argument);
  91:Src/main.c    **** void updateServoPositions(void *argument);
  92:Src/main.c    **** void startDefaultTask(void *argument);
  93:Src/main.c    **** 
  94:Src/main.c    **** //static void AllocMemoryPoolBlock (void);
  95:Src/main.c    **** 
  96:Src/main.c    **** //void SPI_WIFI_ISR(void);
  97:Src/main.c    **** 
  98:Src/main.c    **** /* USER CODE BEGIN PFP */
  99:Src/main.c    **** /* USER CODE END PFP */
 100:Src/main.c    **** 
 101:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 102:Src/main.c    **** /* USER CODE BEGIN 0 */
 103:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 4


 104:Src/main.c    **** /* USER CODE END 0 */
 105:Src/main.c    **** 
 106:Src/main.c    **** /**
 107:Src/main.c    ****  * @brief  The application entry point.
 108:Src/main.c    ****  * @retval int
 109:Src/main.c    ****  */
 110:Src/main.c    **** int main(void)
 111:Src/main.c    **** {
  51              		.loc 1 111 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 184
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 20
  58              		.cfi_offset 4, -20
  59              		.cfi_offset 5, -16
  60              		.cfi_offset 6, -12
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 AFB0     		sub	sp, sp, #188
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 208
 112:Src/main.c    **** 	/* USER CODE BEGIN 1 */
 113:Src/main.c    **** 
 114:Src/main.c    **** 	/* USER CODE END 1 */
 115:Src/main.c    **** 
 116:Src/main.c    **** 	/* MCU Configuration--------------------------------------------------------*/
 117:Src/main.c    **** 
 118:Src/main.c    **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Src/main.c    **** 	HAL_Init();
  66              		.loc 1 119 2 view .LVU1
  67 0004 FFF7FEFF 		bl	HAL_Init
  68              	.LVL0:
 120:Src/main.c    **** 
 121:Src/main.c    **** 	/* USER CODE BEGIN Init */
 122:Src/main.c    **** 
 123:Src/main.c    **** 	SystemClock_Config();
  69              		.loc 1 123 2 view .LVU2
  70 0008 FFF7FEFF 		bl	SystemClock_Config
  71              	.LVL1:
 124:Src/main.c    **** 
 125:Src/main.c    **** 	/* USER CODE END Init */
 126:Src/main.c    **** 
 127:Src/main.c    **** 	/* Configure the system clock */
 128:Src/main.c    **** 	Periph_Config();
  72              		.loc 1 128 2 view .LVU3
  73 000c FFF7FEFF 		bl	Periph_Config
  74              	.LVL2:
 129:Src/main.c    **** 	BSP_LED_Init(LED_GREEN);
  75              		.loc 1 129 2 view .LVU4
  76 0010 0020     		movs	r0, #0
  77 0012 FFF7FEFF 		bl	BSP_LED_Init
  78              	.LVL3:
 130:Src/main.c    **** 	BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
  79              		.loc 1 130 2 view .LVU5
  80 0016 0121     		movs	r1, #1
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 5


  81 0018 0020     		movs	r0, #0
  82 001a FFF7FEFF 		bl	BSP_PB_Init
  83              	.LVL4:
 131:Src/main.c    **** 	/* Initialize all configured peripherals */
 132:Src/main.c    **** 	Console_UART_Init();
  84              		.loc 1 132 2 view .LVU6
  85 001e FFF7FEFF 		bl	Console_UART_Init
  86              	.LVL5:
 133:Src/main.c    **** 	printf("initialized UART\r\n");
  87              		.loc 1 133 2 view .LVU7
  88 0022 5148     		ldr	r0, .L5
  89 0024 FFF7FEFF 		bl	puts
  90              	.LVL6:
 134:Src/main.c    **** 	//connect to wifi network, begin connection
 135:Src/main.c    **** 
 136:Src/main.c    **** #ifdef WIFI_TIME
 137:Src/main.c    **** 	connect_nodes();
  91              		.loc 1 137 2 view .LVU8
  92 0028 FFF7FEFF 		bl	connect_nodes
  93              	.LVL7:
  94              	.L2:
 138:Src/main.c    **** #ifdef NODE_A
 139:Src/main.c    **** 	int cnxnStatus;
  95              		.loc 1 139 2 discriminator 1 view .LVU9
 140:Src/main.c    **** 	do
  96              		.loc 1 140 2 discriminator 1 view .LVU10
 141:Src/main.c    **** 	{
 142:Src/main.c    **** 	cnxnStatus = beginClientServerConnection();
  97              		.loc 1 142 2 discriminator 1 view .LVU11
  98              		.loc 1 142 15 is_stmt 0 discriminator 1 view .LVU12
  99 002c FFF7FEFF 		bl	beginClientServerConnection
 100              	.LVL8:
 101 0030 0446     		mov	r4, r0
 102              	.LVL9:
 143:Src/main.c    **** 	HAL_Delay(5000);
 103              		.loc 1 143 2 is_stmt 1 discriminator 1 view .LVU13
 104 0032 41F28830 		movw	r0, #5000
 105              	.LVL10:
 106              		.loc 1 143 2 is_stmt 0 discriminator 1 view .LVU14
 107 0036 FFF7FEFF 		bl	HAL_Delay
 108              	.LVL11:
 144:Src/main.c    **** 	} while ( cnxnStatus != 0);
 109              		.loc 1 144 10 is_stmt 1 discriminator 1 view .LVU15
 110              		.loc 1 144 2 is_stmt 0 discriminator 1 view .LVU16
 111 003a 002C     		cmp	r4, #0
 112 003c F6D1     		bne	.L2
 145:Src/main.c    **** 
 146:Src/main.c    **** #endif //NODE A
 147:Src/main.c    **** 
 148:Src/main.c    **** #ifndef NODE_A
 149:Src/main.c    **** 	beginClientServerConnection();
 150:Src/main.c    **** #endif
 151:Src/main.c    **** #endif //WIFI TIME
 152:Src/main.c    **** 
 153:Src/main.c    **** 	clearPosnHistory();
 113              		.loc 1 153 2 is_stmt 1 view .LVU17
 114 003e FFF7FEFF 		bl	clearPosnHistory
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 6


 115              	.LVL12:
 154:Src/main.c    **** 
 155:Src/main.c    **** 	MX_GPIO_Init();
 116              		.loc 1 155 2 view .LVU18
 117 0042 FFF7FEFF 		bl	MX_GPIO_Init
 118              	.LVL13:
 156:Src/main.c    **** 	MX_ADC1_Init();
 119              		.loc 1 156 2 view .LVU19
 120 0046 FFF7FEFF 		bl	MX_ADC1_Init
 121              	.LVL14:
 157:Src/main.c    **** 	MX_TIM3_Init();
 122              		.loc 1 157 2 view .LVU20
 123 004a FFF7FEFF 		bl	MX_TIM3_Init
 124              	.LVL15:
 158:Src/main.c    **** 	MX_TIM15_Init();
 125              		.loc 1 158 2 view .LVU21
 126 004e FFF7FEFF 		bl	MX_TIM15_Init
 127              	.LVL16:
 159:Src/main.c    **** 
 160:Src/main.c    **** 	//******* EXTRA PERIPHS ADDED *********
 161:Src/main.c    **** 	  MX_ADC2_Init();
 128              		.loc 1 161 4 view .LVU22
 129 0052 FFF7FEFF 		bl	MX_ADC2_Init
 130              	.LVL17:
 162:Src/main.c    **** 	  MX_ADC3_Init();
 131              		.loc 1 162 4 view .LVU23
 132 0056 FFF7FEFF 		bl	MX_ADC3_Init
 133              	.LVL18:
 163:Src/main.c    **** 	  MX_TIM4_Init();
 134              		.loc 1 163 4 view .LVU24
 135 005a FFF7FEFF 		bl	MX_TIM4_Init
 136              	.LVL19:
 164:Src/main.c    **** 	  MX_TIM16_Init();
 137              		.loc 1 164 4 view .LVU25
 138 005e FFF7FEFF 		bl	MX_TIM16_Init
 139              	.LVL20:
 165:Src/main.c    **** 	//*******END EXTRA PERIPHS ADDED *********
 166:Src/main.c    **** 
 167:Src/main.c    **** 	HAL_TIM_PWM_Start(&htim15, TIM_CHANNEL_1); //
 140              		.loc 1 167 2 view .LVU26
 141 0062 0021     		movs	r1, #0
 142 0064 4148     		ldr	r0, .L5+4
 143 0066 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 144              	.LVL21:
 168:Src/main.c    **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3); //
 145              		.loc 1 168 2 view .LVU27
 146 006a 0821     		movs	r1, #8
 147 006c 4048     		ldr	r0, .L5+8
 148 006e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 149              	.LVL22:
 169:Src/main.c    **** 	HAL_TIM_PWM_Start(&htim16, TIM_CHANNEL_1); //
 150              		.loc 1 169 2 view .LVU28
 151 0072 0021     		movs	r1, #0
 152 0074 3F48     		ldr	r0, .L5+12
 153 0076 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 154              	.LVL23:
 170:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 7


 171:Src/main.c    **** 	setPulseBase(BASE_PULSE_MIN, 1);
 155              		.loc 1 171 2 view .LVU29
 156 007a 0121     		movs	r1, #1
 157 007c 6E20     		movs	r0, #110
 158 007e FFF7FEFF 		bl	setPulseBase
 159              	.LVL24:
 172:Src/main.c    **** 	setPulseMid(MID_PULSE_MIN, 1);
 160              		.loc 1 172 2 view .LVU30
 161 0082 0121     		movs	r1, #1
 162 0084 5A20     		movs	r0, #90
 163 0086 FFF7FEFF 		bl	setPulseMid
 164              	.LVL25:
 173:Src/main.c    **** 	setPulseTop(TOP_PULSE_MIN, 1);
 165              		.loc 1 173 2 view .LVU31
 166 008a 0121     		movs	r1, #1
 167 008c 5A20     		movs	r0, #90
 168 008e FFF7FEFF 		bl	setPulseTop
 169              	.LVL26:
 174:Src/main.c    **** 
 175:Src/main.c    **** 	/* USER CODE END 2 */
 176:Src/main.c    **** 
 177:Src/main.c    **** 	osKernelInitialize();
 170              		.loc 1 177 2 view .LVU32
 171 0092 FFF7FEFF 		bl	osKernelInitialize
 172              	.LVL27:
 178:Src/main.c    **** 
 179:Src/main.c    **** 	/* Create the mutex(es) */
 180:Src/main.c    **** 	/* definition and creation of useSPI3Mutex */
 181:Src/main.c    **** 	const osMutexAttr_t useSPI3Mutex_attributes = {
 173              		.loc 1 181 2 view .LVU33
 174              		.loc 1 181 22 is_stmt 0 view .LVU34
 175 0096 2B94     		str	r4, [sp, #172]
 176 0098 2C94     		str	r4, [sp, #176]
 177 009a 2D94     		str	r4, [sp, #180]
 178 009c 364B     		ldr	r3, .L5+16
 179 009e 2A93     		str	r3, [sp, #168]
 182:Src/main.c    **** 			.name = "useSPI3Mutex"
 183:Src/main.c    **** 	};
 184:Src/main.c    **** 	useSPI3MutexHandle = osMutexNew(&useSPI3Mutex_attributes);
 180              		.loc 1 184 2 is_stmt 1 view .LVU35
 181              		.loc 1 184 23 is_stmt 0 view .LVU36
 182 00a0 2AA8     		add	r0, sp, #168
 183 00a2 FFF7FEFF 		bl	osMutexNew
 184              	.LVL28:
 185              		.loc 1 184 21 view .LVU37
 186 00a6 354B     		ldr	r3, .L5+20
 187 00a8 1860     		str	r0, [r3]
 185:Src/main.c    **** 
 186:Src/main.c    **** 	const osMessageQueueAttr_t wifiMsgQ_attributes = {
 188              		.loc 1 186 2 is_stmt 1 view .LVU38
 189              		.loc 1 186 29 is_stmt 0 view .LVU39
 190 00aa 2594     		str	r4, [sp, #148]
 191 00ac 2694     		str	r4, [sp, #152]
 192 00ae 2794     		str	r4, [sp, #156]
 193 00b0 2894     		str	r4, [sp, #160]
 194 00b2 2994     		str	r4, [sp, #164]
 195 00b4 324B     		ldr	r3, .L5+24
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 8


 196 00b6 2493     		str	r3, [sp, #144]
 187:Src/main.c    **** 			.name = "wifiMsgQ"
 188:Src/main.c    **** 	};
 189:Src/main.c    **** 	wifiMsgQID = osMessageQueueNew (8, sizeof(ANALOG_CMD_t), &wifiMsgQ_attributes);
 197              		.loc 1 189 2 is_stmt 1 view .LVU40
 198              		.loc 1 189 15 is_stmt 0 view .LVU41
 199 00b8 24AA     		add	r2, sp, #144
 200 00ba 0721     		movs	r1, #7
 201 00bc 0820     		movs	r0, #8
 202 00be FFF7FEFF 		bl	osMessageQueueNew
 203              	.LVL29:
 204              		.loc 1 189 13 view .LVU42
 205 00c2 304B     		ldr	r3, .L5+28
 206 00c4 1860     		str	r0, [r3]
 190:Src/main.c    **** 
 191:Src/main.c    **** 	/* definition and creation of wifiMsgHandle */
 192:Src/main.c    **** 	const osThreadAttr_t wifiMsgHandle_attributes = {
 207              		.loc 1 192 2 is_stmt 1 view .LVU43
 208              		.loc 1 192 23 is_stmt 0 view .LVU44
 209 00c6 2025     		movs	r5, #32
 210 00c8 2A46     		mov	r2, r5
 211 00ca 2146     		mov	r1, r4
 212 00cc 1CA8     		add	r0, sp, #112
 213 00ce FFF7FEFF 		bl	memset
 214              	.LVL30:
 215 00d2 2D4B     		ldr	r3, .L5+32
 216 00d4 1B93     		str	r3, [sp, #108]
 217 00d6 4FF4FA67 		mov	r7, #2000
 218 00da 2097     		str	r7, [sp, #128]
 219 00dc 1826     		movs	r6, #24
 220 00de 2196     		str	r6, [sp, #132]
 193:Src/main.c    **** 			.name = "wifiMsgHandle",
 194:Src/main.c    **** 			.priority = (osPriority_t) osPriorityNormal,
 195:Src/main.c    **** 			.stack_size = 2000 //1000
 196:Src/main.c    **** 	};
 197:Src/main.c    **** 	wifiMsgHandleHandle = osThreadNew(parseWifiMsg, NULL, &wifiMsgHandle_attributes);
 221              		.loc 1 197 2 is_stmt 1 view .LVU45
 222              		.loc 1 197 24 is_stmt 0 view .LVU46
 223 00e0 1BAA     		add	r2, sp, #108
 224 00e2 2146     		mov	r1, r4
 225 00e4 2948     		ldr	r0, .L5+36
 226 00e6 FFF7FEFF 		bl	osThreadNew
 227              	.LVL31:
 228              		.loc 1 197 22 view .LVU47
 229 00ea 294B     		ldr	r3, .L5+40
 230 00ec 1860     		str	r0, [r3]
 198:Src/main.c    **** 
 199:Src/main.c    **** 	/* definition and creation of wifiMsgHandle */
 200:Src/main.c    **** 	const osThreadAttr_t wifiMsgGet_attributes = {
 231              		.loc 1 200 2 is_stmt 1 view .LVU48
 232              		.loc 1 200 23 is_stmt 0 view .LVU49
 233 00ee 2A46     		mov	r2, r5
 234 00f0 2146     		mov	r1, r4
 235 00f2 13A8     		add	r0, sp, #76
 236 00f4 FFF7FEFF 		bl	memset
 237              	.LVL32:
 238 00f8 264B     		ldr	r3, .L5+44
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 9


 239 00fa 1293     		str	r3, [sp, #72]
 240 00fc 1797     		str	r7, [sp, #92]
 241 00fe 1896     		str	r6, [sp, #96]
 201:Src/main.c    **** 			.name = "wifiMsgGet",
 202:Src/main.c    **** 			.priority = (osPriority_t) osPriorityNormal,
 203:Src/main.c    **** 			.stack_size = 2000 //1000
 204:Src/main.c    **** 	};
 205:Src/main.c    **** 	wifiMsgGetHandle = osThreadNew(getWifiMsg, NULL, &wifiMsgGet_attributes);
 242              		.loc 1 205 2 is_stmt 1 view .LVU50
 243              		.loc 1 205 21 is_stmt 0 view .LVU51
 244 0100 12AA     		add	r2, sp, #72
 245 0102 2146     		mov	r1, r4
 246 0104 2448     		ldr	r0, .L5+48
 247 0106 FFF7FEFF 		bl	osThreadNew
 248              	.LVL33:
 249              		.loc 1 205 19 view .LVU52
 250 010a 244B     		ldr	r3, .L5+52
 251 010c 1860     		str	r0, [r3]
 206:Src/main.c    **** 
 207:Src/main.c    **** 	/* definition and creation of servoPosHandle */
 208:Src/main.c    **** 	const osThreadAttr_t servoPosHandle_attributes = {
 252              		.loc 1 208 2 is_stmt 1 view .LVU53
 253              		.loc 1 208 23 is_stmt 0 view .LVU54
 254 010e 2A46     		mov	r2, r5
 255 0110 2146     		mov	r1, r4
 256 0112 0AA8     		add	r0, sp, #40
 257 0114 FFF7FEFF 		bl	memset
 258              	.LVL34:
 259 0118 214B     		ldr	r3, .L5+56
 260 011a 0993     		str	r3, [sp, #36]
 261 011c 4FF49663 		mov	r3, #1200
 262 0120 0E93     		str	r3, [sp, #56]
 263 0122 0F95     		str	r5, [sp, #60]
 209:Src/main.c    **** 			.name = "servoPosHandle",
 210:Src/main.c    **** 			.priority = (osPriority_t) osPriorityAboveNormal,
 211:Src/main.c    **** 			.stack_size = 1200 //600
 212:Src/main.c    **** 	};
 213:Src/main.c    **** 	servoPosHandleHandle = osThreadNew(updateServoPositions, NULL, &servoPosHandle_attributes);
 264              		.loc 1 213 2 is_stmt 1 view .LVU55
 265              		.loc 1 213 25 is_stmt 0 view .LVU56
 266 0124 09AA     		add	r2, sp, #36
 267 0126 2146     		mov	r1, r4
 268 0128 1E48     		ldr	r0, .L5+60
 269 012a FFF7FEFF 		bl	osThreadNew
 270              	.LVL35:
 271              		.loc 1 213 23 view .LVU57
 272 012e 1E4B     		ldr	r3, .L5+64
 273 0130 1860     		str	r0, [r3]
 214:Src/main.c    **** 
 215:Src/main.c    **** 	/* definition and creation of defaultTask */
 216:Src/main.c    **** 	const osThreadAttr_t defaultTask_attributes = {
 274              		.loc 1 216 2 is_stmt 1 view .LVU58
 275              		.loc 1 216 23 is_stmt 0 view .LVU59
 276 0132 2A46     		mov	r2, r5
 277 0134 2146     		mov	r1, r4
 278 0136 01A8     		add	r0, sp, #4
 279 0138 FFF7FEFF 		bl	memset
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 10


 280              	.LVL36:
 281 013c 1B4B     		ldr	r3, .L5+68
 282 013e 0093     		str	r3, [sp]
 283 0140 8023     		movs	r3, #128
 284 0142 0593     		str	r3, [sp, #20]
 285 0144 1023     		movs	r3, #16
 286 0146 0693     		str	r3, [sp, #24]
 217:Src/main.c    **** 			.name = "defaultTask",
 218:Src/main.c    **** 			.priority = (osPriority_t) osPriorityBelowNormal,
 219:Src/main.c    **** 			.stack_size = 128
 220:Src/main.c    **** 	};
 221:Src/main.c    **** 	defaultTask = osThreadNew(startDefaultTask, NULL, &defaultTask_attributes);
 287              		.loc 1 221 2 is_stmt 1 view .LVU60
 288              		.loc 1 221 16 is_stmt 0 view .LVU61
 289 0148 6A46     		mov	r2, sp
 290 014a 2146     		mov	r1, r4
 291 014c 1848     		ldr	r0, .L5+72
 292 014e FFF7FEFF 		bl	osThreadNew
 293              	.LVL37:
 294              		.loc 1 221 14 view .LVU62
 295 0152 184B     		ldr	r3, .L5+76
 296 0154 1860     		str	r0, [r3]
 222:Src/main.c    **** 
 223:Src/main.c    **** 
 224:Src/main.c    **** 	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
 297              		.loc 1 224 2 is_stmt 1 view .LVU63
 298 0156 0821     		movs	r1, #8
 299 0158 4FF09040 		mov	r0, #1207959552
 300 015c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 301              	.LVL38:
 225:Src/main.c    **** 
 226:Src/main.c    **** 
 227:Src/main.c    **** 	/* Start scheduler */
 228:Src/main.c    **** 	osKernelStart();
 302              		.loc 1 228 2 view .LVU64
 303 0160 FFF7FEFF 		bl	osKernelStart
 304              	.LVL39:
 305              	.L3:
 229:Src/main.c    **** 
 230:Src/main.c    **** 	/* We should never get here as control is now taken by the scheduler */
 231:Src/main.c    **** 	while (1)
 306              		.loc 1 231 2 discriminator 1 view .LVU65
 232:Src/main.c    **** 	{
 233:Src/main.c    **** 		//:D
 234:Src/main.c    **** 	}
 307              		.loc 1 234 2 discriminator 1 view .LVU66
 231:Src/main.c    **** 	{
 308              		.loc 1 231 8 discriminator 1 view .LVU67
 309 0164 FEE7     		b	.L3
 310              	.L6:
 311 0166 00BF     		.align	2
 312              	.L5:
 313 0168 00000000 		.word	.LC0
 314 016c 00000000 		.word	htim15
 315 0170 00000000 		.word	htim4
 316 0174 00000000 		.word	htim16
 317 0178 14000000 		.word	.LC1
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 11


 318 017c 00000000 		.word	useSPI3MutexHandle
 319 0180 24000000 		.word	.LC2
 320 0184 00000000 		.word	wifiMsgQID
 321 0188 30000000 		.word	.LC3
 322 018c 00000000 		.word	parseWifiMsg
 323 0190 00000000 		.word	wifiMsgHandleHandle
 324 0194 40000000 		.word	.LC4
 325 0198 00000000 		.word	getWifiMsg
 326 019c 00000000 		.word	wifiMsgGetHandle
 327 01a0 4C000000 		.word	.LC5
 328 01a4 00000000 		.word	updateServoPositions
 329 01a8 00000000 		.word	servoPosHandleHandle
 330 01ac 5C000000 		.word	.LC6
 331 01b0 00000000 		.word	startDefaultTask
 332 01b4 00000000 		.word	defaultTask
 333              		.cfi_endproc
 334              	.LFE322:
 336              		.section	.text.SPI3_IRQHandler,"ax",%progbits
 337              		.align	1
 338              		.global	SPI3_IRQHandler
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	SPI3_IRQHandler:
 345              	.LFB323:
 235:Src/main.c    **** 
 236:Src/main.c    **** }
 237:Src/main.c    **** 
 238:Src/main.c    **** 
 239:Src/main.c    **** /* USER CODE BEGIN 4 */
 240:Src/main.c    **** /*
 241:Src/main.c    **** static void AllocMemoryPoolBlock (void) {
 242:Src/main.c    **** 	osPoolId MemPool_Id;
 243:Src/main.c    **** 	MEM_BLOCK *addr;
 244:Src/main.c    **** 
 245:Src/main.c    **** 	MemPool_Id = osPoolCreate(osPool(MemPool));
 246:Src/main.c    **** 	if (MemPool_Id != NULL) {
 247:Src/main.c    **** 		// allocate a memory block
 248:Src/main.c    **** 		addr = (MEM_BLOCK *)osPoolAlloc(MemPool_Id);
 249:Src/main.c    **** 
 250:Src/main.c    **** 		if (addr != NULL) {
 251:Src/main.c    **** 			// memory block was allocated
 252:Src/main.c    **** 		}
 253:Src/main.c    **** 	}
 254:Src/main.c    **** }
 255:Src/main.c    **** */
 256:Src/main.c    **** 
 257:Src/main.c    **** 
 258:Src/main.c    **** 
 259:Src/main.c    **** 
 260:Src/main.c    **** 
 261:Src/main.c    **** 
 262:Src/main.c    **** void SPI3_IRQHandler(void)
 263:Src/main.c    **** {
 346              		.loc 1 263 1 view -0
 347              		.cfi_startproc
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 12


 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              	.LCFI2:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
 264:Src/main.c    **** 	HAL_SPI_IRQHandler(&hspi);
 355              		.loc 1 264 2 view .LVU69
 356 0002 0248     		ldr	r0, .L9
 357 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 358              	.LVL40:
 265:Src/main.c    **** }
 359              		.loc 1 265 1 is_stmt 0 view .LVU70
 360 0008 08BD     		pop	{r3, pc}
 361              	.L10:
 362 000a 00BF     		.align	2
 363              	.L9:
 364 000c 00000000 		.word	hspi
 365              		.cfi_endproc
 366              	.LFE323:
 368              		.section	.text.Error_Handler,"ax",%progbits
 369              		.align	1
 370              		.global	Error_Handler
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	Error_Handler:
 377              	.LFB324:
 266:Src/main.c    **** 
 267:Src/main.c    **** 
 268:Src/main.c    **** /**
 269:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 270:Src/main.c    ****  * @retval None
 271:Src/main.c    ****  */
 272:Src/main.c    **** void Error_Handler(void)
 273:Src/main.c    **** {
 378              		.loc 1 273 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ Volatile: function does not return.
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 08B5     		push	{r3, lr}
 384              	.LCFI3:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 388              	.L12:
 274:Src/main.c    **** 	while(1)
 389              		.loc 1 274 2 discriminator 1 view .LVU72
 275:Src/main.c    **** 	{
 276:Src/main.c    **** 		BSP_LED_Toggle(LED_GREEN);
 390              		.loc 1 276 3 discriminator 1 view .LVU73
 391 0002 0020     		movs	r0, #0
 392 0004 FFF7FEFF 		bl	BSP_LED_Toggle
 393              	.LVL41:
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 13


 277:Src/main.c    **** 		HAL_Delay(200);
 394              		.loc 1 277 3 discriminator 1 view .LVU74
 395 0008 C820     		movs	r0, #200
 396 000a FFF7FEFF 		bl	HAL_Delay
 397              	.LVL42:
 274:Src/main.c    **** 	while(1)
 398              		.loc 1 274 7 discriminator 1 view .LVU75
 399 000e F8E7     		b	.L12
 400              		.cfi_endproc
 401              	.LFE324:
 403              		.comm	htim16,64,4
 404              		.comm	htim4,64,4
 405              		.comm	htim15,64,4
 406              		.comm	defaultTask,4,4
 407              		.comm	useSPI3MutexHandle,4,4
 408              		.comm	servoPosHandleHandle,4,4
 409              		.comm	servoDestHandleHandle,4,4
 410              		.comm	wifiMsgGetHandle,4,4
 411              		.comm	wifiMsgHandleHandle,4,4
 412              		.comm	wifiMsgQID,4,4
 413              		.comm	hnet,4,4
 414              		.text
 415              	.Letext0:
 416              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 417              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 418              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 419              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 420              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
 421              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 422              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 423              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 424              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 425              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 426              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 427              		.file 13 "Drivers/STM32CubeL4_libs/Inc/stm32l475e_iot01.h"
 428              		.file 14 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-non
 429              		.file 15 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 430              		.file 16 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 431              		.file 17 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 432              		.file 18 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 433              		.file 19 "Drivers/STM32CubeL4_libs/Inc/net.h"
 434              		.file 20 "Drivers/STM32CubeL4_libs/Inc/iot_flash_config.h"
 435              		.file 21 "Inc/main.h"
 436              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 437              		.file 23 "Inc/CustomUserFunctions.h"
 438              		.file 24 "Inc/Hardware_Init.h"
 439              		.file 25 "Inc/Analog_PWM_Functions.h"
 440              		.file 26 "<built-in>"
 441              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccPjUmGc.s:18     .rodata.main.str1.4:00000000 $d
C:\cygwin64\tmp\ccPjUmGc.s:40     .text.main:00000000 $t
C:\cygwin64\tmp\ccPjUmGc.s:48     .text.main:00000000 main
C:\cygwin64\tmp\ccPjUmGc.s:313    .text.main:00000168 $d
                            *COM*:00000040 htim15
                            *COM*:00000040 htim4
                            *COM*:00000040 htim16
                            *COM*:00000004 useSPI3MutexHandle
                            *COM*:00000004 wifiMsgQID
                            *COM*:00000004 wifiMsgHandleHandle
                            *COM*:00000004 wifiMsgGetHandle
                            *COM*:00000004 servoPosHandleHandle
                            *COM*:00000004 defaultTask
C:\cygwin64\tmp\ccPjUmGc.s:337    .text.SPI3_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccPjUmGc.s:344    .text.SPI3_IRQHandler:00000000 SPI3_IRQHandler
C:\cygwin64\tmp\ccPjUmGc.s:364    .text.SPI3_IRQHandler:0000000c $d
C:\cygwin64\tmp\ccPjUmGc.s:369    .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\ccPjUmGc.s:376    .text.Error_Handler:00000000 Error_Handler
                            *COM*:00000004 servoDestHandleHandle
                            *COM*:00000004 hnet

UNDEFINED SYMBOLS
HAL_Init
SystemClock_Config
Periph_Config
BSP_LED_Init
BSP_PB_Init
Console_UART_Init
puts
connect_nodes
beginClientServerConnection
HAL_Delay
clearPosnHistory
MX_GPIO_Init
MX_ADC1_Init
MX_TIM3_Init
MX_TIM15_Init
MX_ADC2_Init
MX_ADC3_Init
MX_TIM4_Init
MX_TIM16_Init
HAL_TIM_PWM_Start
setPulseBase
setPulseMid
setPulseTop
osKernelInitialize
osMutexNew
osMessageQueueNew
memset
osThreadNew
HAL_GPIO_TogglePin
osKernelStart
parseWifiMsg
getWifiMsg
updateServoPositions
ARM GAS  C:\cygwin64\tmp\ccPjUmGc.s 			page 15


startDefaultTask
HAL_SPI_IRQHandler
hspi
BSP_LED_Toggle

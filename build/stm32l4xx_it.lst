ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB322:
  28              		.file 1 "Src/stm32l4xx_it.c"
   1:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32l4xx_it.c **** /**
   3:Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Src/stm32l4xx_it.c ****   * @attention
   8:Src/stm32l4xx_it.c ****   *
   9:Src/stm32l4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32l4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32l4xx_it.c ****   *
  12:Src/stm32l4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32l4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32l4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32l4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32l4xx_it.c ****   *
  17:Src/stm32l4xx_it.c ****   ******************************************************************************
  18:Src/stm32l4xx_it.c ****   */
  19:Src/stm32l4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32l4xx_it.c **** 
  21:Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32l4xx_it.c **** #include "main.h"
  23:Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  24:Src/stm32l4xx_it.c **** #include "FreeRTOS.h"
  25:Src/stm32l4xx_it.c **** #include "task.h"
  26:Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32l4xx_it.c **** 
  30:Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 2


  31:Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32l4xx_it.c **** 
  33:Src/stm32l4xx_it.c **** /* USER CODE END TD */
  34:Src/stm32l4xx_it.c **** 
  35:Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32l4xx_it.c ****  
  38:Src/stm32l4xx_it.c **** /* USER CODE END PD */
  39:Src/stm32l4xx_it.c **** 
  40:Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32l4xx_it.c **** 
  43:Src/stm32l4xx_it.c **** /* USER CODE END PM */
  44:Src/stm32l4xx_it.c **** 
  45:Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32l4xx_it.c **** 
  48:Src/stm32l4xx_it.c **** /* USER CODE END PV */
  49:Src/stm32l4xx_it.c **** 
  50:Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32l4xx_it.c **** 
  53:Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32l4xx_it.c **** 
  55:Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32l4xx_it.c **** 
  58:Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32l4xx_it.c **** 
  60:Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim2;
  62:Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim3;
  63:Src/stm32l4xx_it.c **** 
  64:Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32l4xx_it.c **** 
  66:Src/stm32l4xx_it.c **** /* USER CODE END EV */
  67:Src/stm32l4xx_it.c **** 
  68:Src/stm32l4xx_it.c **** /******************************************************************************/
  69:Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  70:Src/stm32l4xx_it.c **** /******************************************************************************/
  71:Src/stm32l4xx_it.c **** /**
  72:Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Src/stm32l4xx_it.c ****   */
  74:Src/stm32l4xx_it.c **** void NMI_Handler(void)
  75:Src/stm32l4xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  76:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Src/stm32l4xx_it.c **** 
  78:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Src/stm32l4xx_it.c **** 
  81:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32l4xx_it.c **** }
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 3


  34              		.loc 1 82 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE322:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB323:
  83:Src/stm32l4xx_it.c **** 
  84:Src/stm32l4xx_it.c **** /**
  85:Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32l4xx_it.c ****   */
  87:Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32l4xx_it.c **** {
  49              		.loc 1 88 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  89:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32l4xx_it.c **** 
  91:Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32l4xx_it.c ****   while (1)
  56              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Src/stm32l4xx_it.c ****   {
  94:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Src/stm32l4xx_it.c ****   }
  57              		.loc 1 96 3 discriminator 1 view .LVU4
  92:Src/stm32l4xx_it.c ****   {
  58              		.loc 1 92 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE323:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB324:
  97:Src/stm32l4xx_it.c **** }
  98:Src/stm32l4xx_it.c **** 
  99:Src/stm32l4xx_it.c **** /**
 100:Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
 101:Src/stm32l4xx_it.c ****   */
 102:Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 103:Src/stm32l4xx_it.c **** {
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 4


  73              		.loc 1 103 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 104:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Src/stm32l4xx_it.c **** 
 106:Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Src/stm32l4xx_it.c ****   while (1)
  80              		.loc 1 107 3 discriminator 1 view .LVU7
 108:Src/stm32l4xx_it.c ****   {
 109:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Src/stm32l4xx_it.c ****   }
  81              		.loc 1 111 3 discriminator 1 view .LVU8
 107:Src/stm32l4xx_it.c ****   {
  82              		.loc 1 107 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE324:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB325:
 112:Src/stm32l4xx_it.c **** }
 113:Src/stm32l4xx_it.c **** 
 114:Src/stm32l4xx_it.c **** /**
 115:Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 116:Src/stm32l4xx_it.c ****   */
 117:Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 118:Src/stm32l4xx_it.c **** {
  97              		.loc 1 118 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 119:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Src/stm32l4xx_it.c **** 
 121:Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Src/stm32l4xx_it.c ****   while (1)
 104              		.loc 1 122 3 discriminator 1 view .LVU11
 123:Src/stm32l4xx_it.c ****   {
 124:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Src/stm32l4xx_it.c ****   }
 105              		.loc 1 126 3 discriminator 1 view .LVU12
 122:Src/stm32l4xx_it.c ****   {
 106              		.loc 1 122 9 discriminator 1 view .LVU13
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 5


 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE325:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB326:
 127:Src/stm32l4xx_it.c **** }
 128:Src/stm32l4xx_it.c **** 
 129:Src/stm32l4xx_it.c **** /**
 130:Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Src/stm32l4xx_it.c ****   */
 132:Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 133:Src/stm32l4xx_it.c **** {
 121              		.loc 1 133 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 134:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Src/stm32l4xx_it.c **** 
 136:Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Src/stm32l4xx_it.c ****   while (1)
 128              		.loc 1 137 3 discriminator 1 view .LVU15
 138:Src/stm32l4xx_it.c ****   {
 139:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Src/stm32l4xx_it.c ****   }
 129              		.loc 1 141 3 discriminator 1 view .LVU16
 137:Src/stm32l4xx_it.c ****   {
 130              		.loc 1 137 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE326:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	DebugMon_Handler:
 144              	.LFB327:
 142:Src/stm32l4xx_it.c **** }
 143:Src/stm32l4xx_it.c **** 
 144:Src/stm32l4xx_it.c **** /**
 145:Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 146:Src/stm32l4xx_it.c ****   */
 147:Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 148:Src/stm32l4xx_it.c **** {
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 6


 145              		.loc 1 148 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 149:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 150:Src/stm32l4xx_it.c **** 
 151:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 152:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 153:Src/stm32l4xx_it.c **** 
 154:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 155:Src/stm32l4xx_it.c **** }
 150              		.loc 1 155 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE327:
 155              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 156              		.align	1
 157              		.global	TIM2_IRQHandler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	TIM2_IRQHandler:
 164              	.LFB328:
 156:Src/stm32l4xx_it.c **** 
 157:Src/stm32l4xx_it.c **** /******************************************************************************/
 158:Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 159:Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 160:Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 161:Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 162:Src/stm32l4xx_it.c **** /******************************************************************************/
 163:Src/stm32l4xx_it.c **** 
 164:Src/stm32l4xx_it.c **** /**
 165:Src/stm32l4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 166:Src/stm32l4xx_it.c ****   */
 167:Src/stm32l4xx_it.c **** void TIM2_IRQHandler(void)
 168:Src/stm32l4xx_it.c **** {
 165              		.loc 1 168 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 08B5     		push	{r3, lr}
 170              	.LCFI0:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
 169:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 170:Src/stm32l4xx_it.c **** 
 171:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 172:Src/stm32l4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 174              		.loc 1 172 3 view .LVU21
 175 0002 0248     		ldr	r0, .L13
 176 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 177              	.LVL0:
 173:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 174:Src/stm32l4xx_it.c **** 
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 7


 175:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 176:Src/stm32l4xx_it.c **** }
 178              		.loc 1 176 1 is_stmt 0 view .LVU22
 179 0008 08BD     		pop	{r3, pc}
 180              	.L14:
 181 000a 00BF     		.align	2
 182              	.L13:
 183 000c 00000000 		.word	htim2
 184              		.cfi_endproc
 185              	.LFE328:
 187              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 188              		.align	1
 189              		.global	EXTI15_10_IRQHandler
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	EXTI15_10_IRQHandler:
 196              	.LFB329:
 177:Src/stm32l4xx_it.c **** 
 178:Src/stm32l4xx_it.c **** /* USER CODE BEGIN 1 */
 179:Src/stm32l4xx_it.c **** 
 180:Src/stm32l4xx_it.c **** /**
 181:Src/stm32l4xx_it.c ****   * @brief  This function handles external line 13 interrupt request.
 182:Src/stm32l4xx_it.c ****   * @param  None
 183:Src/stm32l4xx_it.c ****   * @retval None
 184:Src/stm32l4xx_it.c ****   */
 185:Src/stm32l4xx_it.c **** void EXTI15_10_IRQHandler(void)
 186:Src/stm32l4xx_it.c **** {
 197              		.loc 1 186 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI1:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 187:Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 206              		.loc 1 187 3 view .LVU24
 207 0002 4FF40050 		mov	r0, #8192
 208 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 209              	.LVL1:
 188:Src/stm32l4xx_it.c **** }
 210              		.loc 1 188 1 is_stmt 0 view .LVU25
 211 000a 08BD     		pop	{r3, pc}
 212              		.cfi_endproc
 213              	.LFE329:
 215              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	EXTI1_IRQHandler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv4-sp-d16
 223              	EXTI1_IRQHandler:
 224              	.LFB330:
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 8


 189:Src/stm32l4xx_it.c **** 
 190:Src/stm32l4xx_it.c **** 
 191:Src/stm32l4xx_it.c **** void EXTI1_IRQHandler(void)
 192:Src/stm32l4xx_it.c **** {
 225              		.loc 1 192 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI2:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 193:Src/stm32l4xx_it.c ****  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 234              		.loc 1 193 2 view .LVU27
 235 0002 0220     		movs	r0, #2
 236 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 237              	.LVL2:
 194:Src/stm32l4xx_it.c **** }
 238              		.loc 1 194 1 is_stmt 0 view .LVU28
 239 0008 08BD     		pop	{r3, pc}
 240              		.cfi_endproc
 241              	.LFE330:
 243              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 244              		.align	1
 245              		.global	TIM3_IRQHandler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv4-sp-d16
 251              	TIM3_IRQHandler:
 252              	.LFB331:
 195:Src/stm32l4xx_it.c **** 
 196:Src/stm32l4xx_it.c **** void TIM3_IRQHandler()
 197:Src/stm32l4xx_it.c **** {
 253              		.loc 1 197 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 08B5     		push	{r3, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 198:Src/stm32l4xx_it.c **** 	HAL_TIM_IRQHandler(&htim3);
 262              		.loc 1 198 2 view .LVU30
 263 0002 0248     		ldr	r0, .L21
 264 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 265              	.LVL3:
 199:Src/stm32l4xx_it.c **** }
 266              		.loc 1 199 1 is_stmt 0 view .LVU31
 267 0008 08BD     		pop	{r3, pc}
 268              	.L22:
 269 000a 00BF     		.align	2
 270              	.L21:
 271 000c 00000000 		.word	htim3
 272              		.cfi_endproc
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 9


 273              	.LFE331:
 275              		.text
 276              	.Letext0:
 277              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 278              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 279              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 280              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 281              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
 282              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 283              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 284              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 285              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 286              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 287              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 288              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-non
 289              		.file 14 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 290              		.file 15 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 291              		.file 16 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 292              		.file 17 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 293              		.file 18 "Drivers/STM32CubeL4_libs/Inc/net.h"
 294              		.file 19 "Drivers/STM32CubeL4_libs/Inc/iot_flash_config.h"
 295              		.file 20 "Inc/main.h"
 296              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
ARM GAS  C:\cygwin64\tmp\ccWkduWg.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_it.c
C:\cygwin64\tmp\ccWkduWg.s:18     .text.NMI_Handler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\cygwin64\tmp\ccWkduWg.s:40     .text.HardFault_Handler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:47     .text.HardFault_Handler:00000000 HardFault_Handler
C:\cygwin64\tmp\ccWkduWg.s:64     .text.MemManage_Handler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
C:\cygwin64\tmp\ccWkduWg.s:88     .text.BusFault_Handler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\cygwin64\tmp\ccWkduWg.s:112    .text.UsageFault_Handler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\cygwin64\tmp\ccWkduWg.s:136    .text.DebugMon_Handler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:143    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\cygwin64\tmp\ccWkduWg.s:156    .text.TIM2_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:163    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\cygwin64\tmp\ccWkduWg.s:183    .text.TIM2_IRQHandler:0000000c $d
C:\cygwin64\tmp\ccWkduWg.s:188    .text.EXTI15_10_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:195    .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
C:\cygwin64\tmp\ccWkduWg.s:216    .text.EXTI1_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:223    .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
C:\cygwin64\tmp\ccWkduWg.s:244    .text.TIM3_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccWkduWg.s:251    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\cygwin64\tmp\ccWkduWg.s:271    .text.TIM3_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim2
HAL_GPIO_EXTI_IRQHandler
htim3

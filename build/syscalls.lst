ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialise_monitor_handles,"ax",%progbits
  18              		.align	1
  19              		.global	initialise_monitor_handles
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Src/syscalls.c"
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c **** *****************************************************************************
   3:Src/syscalls.c **** **
   4:Src/syscalls.c **** **  File        : syscalls.c
   5:Src/syscalls.c **** **
   6:Src/syscalls.c **** **  Author		: Auto-generated by System workbench for STM32
   7:Src/syscalls.c **** **
   8:Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Src/syscalls.c **** **
  10:Src/syscalls.c **** ** 		          For more information about which c-functions
  11:Src/syscalls.c **** **                need which of these lowlevel functions
  12:Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Src/syscalls.c **** **
  14:Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Src/syscalls.c **** **
  16:Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Src/syscalls.c **** **                of any kind.
  18:Src/syscalls.c **** **
  19:Src/syscalls.c **** *****************************************************************************
  20:Src/syscalls.c **** ** @attention
  21:Src/syscalls.c **** **
  22:Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Src/syscalls.c **** **
  24:Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Src/syscalls.c **** **      and/or other materials provided with the distribution.
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 2


  31:Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  33:Src/syscalls.c **** **      without specific prior written permission.
  34:Src/syscalls.c **** **
  35:Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/syscalls.c **** **
  46:Src/syscalls.c **** *****************************************************************************
  47:Src/syscalls.c **** */
  48:Src/syscalls.c **** 
  49:Src/syscalls.c **** /* Includes */
  50:Src/syscalls.c **** #include <sys/stat.h>
  51:Src/syscalls.c **** #include <stdlib.h>
  52:Src/syscalls.c **** #include <errno.h>
  53:Src/syscalls.c **** #include <stdio.h>
  54:Src/syscalls.c **** #include <signal.h>
  55:Src/syscalls.c **** #include <time.h>
  56:Src/syscalls.c **** #include <sys/time.h>
  57:Src/syscalls.c **** #include <sys/times.h>
  58:Src/syscalls.c **** 
  59:Src/syscalls.c **** 
  60:Src/syscalls.c **** /* Variables */
  61:Src/syscalls.c **** //#undef errno
  62:Src/syscalls.c **** extern int errno;
  63:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Src/syscalls.c **** 
  66:Src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Src/syscalls.c **** 
  68:Src/syscalls.c **** char *__env[1] = { 0 };
  69:Src/syscalls.c **** char **environ = __env;
  70:Src/syscalls.c **** 
  71:Src/syscalls.c **** 
  72:Src/syscalls.c **** /* Functions */
  73:Src/syscalls.c **** void initialise_monitor_handles()
  74:Src/syscalls.c **** {
  29              		.loc 1 74 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  75:Src/syscalls.c **** }
  34              		.loc 1 75 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
  40              		.align	1
  41              		.global	_getpid
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 3


  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	_getpid:
  48              	.LFB26:
  76:Src/syscalls.c **** 
  77:Src/syscalls.c **** int _getpid(void)
  78:Src/syscalls.c **** {
  49              		.loc 1 78 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  79:Src/syscalls.c **** 	return 1;
  54              		.loc 1 79 2 view .LVU3
  80:Src/syscalls.c **** }
  55              		.loc 1 80 1 is_stmt 0 view .LVU4
  56 0000 0120     		movs	r0, #1
  57 0002 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE26:
  61              		.section	.text._kill,"ax",%progbits
  62              		.align	1
  63              		.global	_kill
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	_kill:
  70              	.LVL0:
  71              	.LFB27:
  81:Src/syscalls.c **** 
  82:Src/syscalls.c **** int _kill(int pid, int sig)
  83:Src/syscalls.c **** {
  72              		.loc 1 83 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 83 1 is_stmt 0 view .LVU6
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  84:Src/syscalls.c **** 	errno = EINVAL;
  82              		.loc 1 84 2 is_stmt 1 view .LVU7
  83 0002 FFF7FEFF 		bl	__errno
  84              	.LVL1:
  85              		.loc 1 84 8 is_stmt 0 view .LVU8
  86 0006 1623     		movs	r3, #22
  87 0008 0360     		str	r3, [r0]
  85:Src/syscalls.c **** 	return -1;
  88              		.loc 1 85 2 is_stmt 1 view .LVU9
  86:Src/syscalls.c **** }
  89              		.loc 1 86 1 is_stmt 0 view .LVU10
  90 000a 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 4


  91 000e 08BD     		pop	{r3, pc}
  92              		.cfi_endproc
  93              	.LFE27:
  95              		.section	.text._exit,"ax",%progbits
  96              		.align	1
  97              		.global	_exit
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	_exit:
 104              	.LVL2:
 105              	.LFB28:
  87:Src/syscalls.c **** 
  88:Src/syscalls.c **** void _exit (int status)
  89:Src/syscalls.c **** {
 106              		.loc 1 89 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 89 1 is_stmt 0 view .LVU12
 112 0000 08B5     		push	{r3, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 3, -8
 116              		.cfi_offset 14, -4
  90:Src/syscalls.c **** 	_kill(status, -1);
 117              		.loc 1 90 2 is_stmt 1 view .LVU13
 118 0002 4FF0FF31 		mov	r1, #-1
 119 0006 FFF7FEFF 		bl	_kill
 120              	.LVL3:
 121              	.L6:
  91:Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 122              		.loc 1 91 2 discriminator 1 view .LVU14
 123              		.loc 1 91 13 discriminator 1 view .LVU15
 124              		.loc 1 91 8 discriminator 1 view .LVU16
 125 000a FEE7     		b	.L6
 126              		.cfi_endproc
 127              	.LFE28:
 129              		.section	.text._read,"ax",%progbits
 130              		.align	1
 131              		.weak	_read
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_read:
 138              	.LVL4:
 139              	.LFB29:
  92:Src/syscalls.c **** }
  93:Src/syscalls.c **** 
  94:Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  95:Src/syscalls.c **** {
 140              		.loc 1 95 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 5


 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 95 1 is_stmt 0 view .LVU18
 145 0000 10B5     		push	{r4, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 0C46     		mov	r4, r1
  96:Src/syscalls.c **** 	/*
  97:Src/syscalls.c **** 	int DataIdx;
  98:Src/syscalls.c **** 
  99:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 100:Src/syscalls.c **** 	{
 101:Src/syscalls.c **** 		*ptr++ = __io_getchar();
 102:Src/syscalls.c **** 	}
 103:Src/syscalls.c **** 
 104:Src/syscalls.c **** return len;*/
 105:Src/syscalls.c **** 	*ptr = __io_getchar();
 151              		.loc 1 105 2 is_stmt 1 view .LVU19
 152              		.loc 1 105 9 is_stmt 0 view .LVU20
 153 0004 FFF7FEFF 		bl	__io_getchar
 154              	.LVL5:
 155              		.loc 1 105 7 view .LVU21
 156 0008 2070     		strb	r0, [r4]
 106:Src/syscalls.c **** 	return 1;
 157              		.loc 1 106 2 is_stmt 1 view .LVU22
 107:Src/syscalls.c **** }
 158              		.loc 1 107 1 is_stmt 0 view .LVU23
 159 000a 0120     		movs	r0, #1
 160 000c 10BD     		pop	{r4, pc}
 161              		.loc 1 107 1 view .LVU24
 162              		.cfi_endproc
 163              	.LFE29:
 165              		.section	.text._write,"ax",%progbits
 166              		.align	1
 167              		.weak	_write
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	_write:
 174              	.LVL6:
 175              	.LFB30:
 108:Src/syscalls.c **** 
 109:Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 110:Src/syscalls.c **** {
 176              		.loc 1 110 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		.loc 1 110 1 is_stmt 0 view .LVU26
 181 0000 70B5     		push	{r4, r5, r6, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 4, -16
 185              		.cfi_offset 5, -12
 186              		.cfi_offset 6, -8
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 6


 187              		.cfi_offset 14, -4
 188 0002 0C46     		mov	r4, r1
 189 0004 1646     		mov	r6, r2
 111:Src/syscalls.c **** 	int DataIdx;
 190              		.loc 1 111 2 is_stmt 1 view .LVU27
 112:Src/syscalls.c **** 
 113:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 191              		.loc 1 113 2 view .LVU28
 192              	.LVL7:
 193              		.loc 1 113 15 is_stmt 0 view .LVU29
 194 0006 0025     		movs	r5, #0
 195              	.LVL8:
 196              	.L11:
 197              		.loc 1 113 20 is_stmt 1 discriminator 1 view .LVU30
 198              		.loc 1 113 2 is_stmt 0 discriminator 1 view .LVU31
 199 0008 B542     		cmp	r5, r6
 200 000a 05DA     		bge	.L14
 114:Src/syscalls.c **** 	{
 115:Src/syscalls.c **** 		__io_putchar(*ptr++);
 201              		.loc 1 115 3 is_stmt 1 discriminator 3 view .LVU32
 202              	.LVL9:
 203              		.loc 1 115 3 is_stmt 0 discriminator 3 view .LVU33
 204 000c 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 205              	.LVL10:
 206              		.loc 1 115 3 discriminator 3 view .LVU34
 207 0010 FFF7FEFF 		bl	__io_putchar
 208              	.LVL11:
 113:Src/syscalls.c **** 	{
 209              		.loc 1 113 35 is_stmt 1 discriminator 3 view .LVU35
 113:Src/syscalls.c **** 	{
 210              		.loc 1 113 42 is_stmt 0 discriminator 3 view .LVU36
 211 0014 0135     		adds	r5, r5, #1
 212              	.LVL12:
 113:Src/syscalls.c **** 	{
 213              		.loc 1 113 42 discriminator 3 view .LVU37
 214 0016 F7E7     		b	.L11
 215              	.L14:
 116:Src/syscalls.c **** 	}
 117:Src/syscalls.c **** 	return len;
 216              		.loc 1 117 2 is_stmt 1 view .LVU38
 118:Src/syscalls.c **** }
 217              		.loc 1 118 1 is_stmt 0 view .LVU39
 218 0018 3046     		mov	r0, r6
 219 001a 70BD     		pop	{r4, r5, r6, pc}
 220              		.loc 1 118 1 view .LVU40
 221              		.cfi_endproc
 222              	.LFE30:
 224              		.section	.text._sbrk,"ax",%progbits
 225              		.align	1
 226              		.global	_sbrk
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv4-sp-d16
 232              	_sbrk:
 233              	.LVL13:
 234              	.LFB31:
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 7


 119:Src/syscalls.c **** 
 120:Src/syscalls.c **** caddr_t _sbrk(int incr)
 121:Src/syscalls.c **** {
 235              		.loc 1 121 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		.loc 1 121 1 is_stmt 0 view .LVU42
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI4:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 245 0002 0346     		mov	r3, r0
 122:Src/syscalls.c **** 	extern char end asm("end");
 246              		.loc 1 122 2 is_stmt 1 view .LVU43
 123:Src/syscalls.c **** 	static char *heap_end;
 247              		.loc 1 123 2 view .LVU44
 124:Src/syscalls.c **** 	char *prev_heap_end;
 248              		.loc 1 124 2 view .LVU45
 125:Src/syscalls.c **** 
 126:Src/syscalls.c **** 	if (heap_end == 0)
 249              		.loc 1 126 2 view .LVU46
 250              		.loc 1 126 15 is_stmt 0 view .LVU47
 251 0004 0B4A     		ldr	r2, .L22
 252 0006 1268     		ldr	r2, [r2]
 253              		.loc 1 126 5 view .LVU48
 254 0008 42B1     		cbz	r2, .L20
 255              	.L16:
 127:Src/syscalls.c **** 		heap_end = &end;
 128:Src/syscalls.c **** 
 129:Src/syscalls.c **** 	prev_heap_end = heap_end;
 256              		.loc 1 129 2 is_stmt 1 view .LVU49
 257              		.loc 1 129 16 is_stmt 0 view .LVU50
 258 000a 0A4A     		ldr	r2, .L22
 259 000c 1068     		ldr	r0, [r2]
 260              	.LVL14:
 130:Src/syscalls.c **** 	if (heap_end + incr > stack_ptr)
 261              		.loc 1 130 2 is_stmt 1 view .LVU51
 262              		.loc 1 130 15 is_stmt 0 view .LVU52
 263 000e 0344     		add	r3, r3, r0
 264              	.LVL15:
 265              		.loc 1 130 5 view .LVU53
 266 0010 6A46     		mov	r2, sp
 267 0012 9342     		cmp	r3, r2
 268 0014 06D8     		bhi	.L21
 131:Src/syscalls.c **** 	{
 132:Src/syscalls.c **** //		write(1, "Heap and stack collision\n", 25);
 133:Src/syscalls.c **** //		abort();
 134:Src/syscalls.c **** 		errno = ENOMEM;
 135:Src/syscalls.c **** 		return (caddr_t) -1;
 136:Src/syscalls.c **** 	}
 137:Src/syscalls.c **** 
 138:Src/syscalls.c **** 	heap_end += incr;
 269              		.loc 1 138 2 is_stmt 1 view .LVU54
 270              		.loc 1 138 11 is_stmt 0 view .LVU55
 271 0016 074A     		ldr	r2, .L22
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 8


 272 0018 1360     		str	r3, [r2]
 139:Src/syscalls.c **** 
 140:Src/syscalls.c **** 	return (caddr_t) prev_heap_end;
 273              		.loc 1 140 2 is_stmt 1 view .LVU56
 274              	.LVL16:
 275              	.L15:
 141:Src/syscalls.c **** }
 276              		.loc 1 141 1 is_stmt 0 view .LVU57
 277 001a 08BD     		pop	{r3, pc}
 278              	.LVL17:
 279              	.L20:
 127:Src/syscalls.c **** 
 280              		.loc 1 127 3 is_stmt 1 view .LVU58
 127:Src/syscalls.c **** 
 281              		.loc 1 127 12 is_stmt 0 view .LVU59
 282 001c 054A     		ldr	r2, .L22
 283 001e 0649     		ldr	r1, .L22+4
 284 0020 1160     		str	r1, [r2]
 285 0022 F2E7     		b	.L16
 286              	.LVL18:
 287              	.L21:
 134:Src/syscalls.c **** 		return (caddr_t) -1;
 288              		.loc 1 134 3 is_stmt 1 view .LVU60
 289 0024 FFF7FEFF 		bl	__errno
 290              	.LVL19:
 134:Src/syscalls.c **** 		return (caddr_t) -1;
 291              		.loc 1 134 9 is_stmt 0 view .LVU61
 292 0028 0C23     		movs	r3, #12
 293 002a 0360     		str	r3, [r0]
 135:Src/syscalls.c **** 	}
 294              		.loc 1 135 3 is_stmt 1 view .LVU62
 135:Src/syscalls.c **** 	}
 295              		.loc 1 135 10 is_stmt 0 view .LVU63
 296 002c 4FF0FF30 		mov	r0, #-1
 297 0030 F3E7     		b	.L15
 298              	.L23:
 299 0032 00BF     		.align	2
 300              	.L22:
 301 0034 00000000 		.word	.LANCHOR0
 302 0038 00000000 		.word	end
 303              		.cfi_endproc
 304              	.LFE31:
 306              		.section	.text._close,"ax",%progbits
 307              		.align	1
 308              		.global	_close
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	_close:
 315              	.LVL20:
 316              	.LFB32:
 142:Src/syscalls.c **** 
 143:Src/syscalls.c **** int _close(int file)
 144:Src/syscalls.c **** {
 317              		.loc 1 144 1 is_stmt 1 view -0
 318              		.cfi_startproc
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 9


 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 145:Src/syscalls.c **** 	return -1;
 322              		.loc 1 145 2 view .LVU65
 146:Src/syscalls.c **** }
 323              		.loc 1 146 1 is_stmt 0 view .LVU66
 324 0000 4FF0FF30 		mov	r0, #-1
 325              	.LVL21:
 326              		.loc 1 146 1 view .LVU67
 327 0004 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE32:
 331              		.section	.text._fstat,"ax",%progbits
 332              		.align	1
 333              		.global	_fstat
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	_fstat:
 340              	.LVL22:
 341              	.LFB33:
 147:Src/syscalls.c **** 
 148:Src/syscalls.c **** 
 149:Src/syscalls.c **** int _fstat(int file, struct stat *st)
 150:Src/syscalls.c **** {
 342              		.loc 1 150 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 151:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 347              		.loc 1 151 2 view .LVU69
 348              		.loc 1 151 14 is_stmt 0 view .LVU70
 349 0000 4FF40053 		mov	r3, #8192
 350 0004 4B60     		str	r3, [r1, #4]
 152:Src/syscalls.c **** 	return 0;
 351              		.loc 1 152 2 is_stmt 1 view .LVU71
 153:Src/syscalls.c **** }
 352              		.loc 1 153 1 is_stmt 0 view .LVU72
 353 0006 0020     		movs	r0, #0
 354              	.LVL23:
 355              		.loc 1 153 1 view .LVU73
 356 0008 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE33:
 360              		.section	.text._isatty,"ax",%progbits
 361              		.align	1
 362              		.global	_isatty
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	_isatty:
 369              	.LVL24:
 370              	.LFB34:
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 10


 154:Src/syscalls.c **** 
 155:Src/syscalls.c **** int _isatty(int file)
 156:Src/syscalls.c **** {
 371              		.loc 1 156 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 157:Src/syscalls.c **** 	return 1;
 376              		.loc 1 157 2 view .LVU75
 158:Src/syscalls.c **** }
 377              		.loc 1 158 1 is_stmt 0 view .LVU76
 378 0000 0120     		movs	r0, #1
 379              	.LVL25:
 380              		.loc 1 158 1 view .LVU77
 381 0002 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE34:
 385              		.section	.text._lseek,"ax",%progbits
 386              		.align	1
 387              		.global	_lseek
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv4-sp-d16
 393              	_lseek:
 394              	.LVL26:
 395              	.LFB35:
 159:Src/syscalls.c **** 
 160:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 161:Src/syscalls.c **** {
 396              		.loc 1 161 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 162:Src/syscalls.c **** 	return 0;
 401              		.loc 1 162 2 view .LVU79
 163:Src/syscalls.c **** }
 402              		.loc 1 163 1 is_stmt 0 view .LVU80
 403 0000 0020     		movs	r0, #0
 404              	.LVL27:
 405              		.loc 1 163 1 view .LVU81
 406 0002 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE35:
 410              		.section	.text._open,"ax",%progbits
 411              		.align	1
 412              		.global	_open
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	_open:
 419              	.LVL28:
 420              	.LFB36:
 164:Src/syscalls.c **** 
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 11


 165:Src/syscalls.c **** int _open(char *path, int flags, ...)
 166:Src/syscalls.c **** {
 421              		.loc 1 166 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 4, pretend = 12, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 1
 425              		@ link register save eliminated.
 426              		.loc 1 166 1 is_stmt 0 view .LVU83
 427 0000 0EB4     		push	{r1, r2, r3}
 428              	.LCFI5:
 429              		.cfi_def_cfa_offset 12
 430              		.cfi_offset 1, -12
 431              		.cfi_offset 2, -8
 432              		.cfi_offset 3, -4
 167:Src/syscalls.c **** 	/* Pretend like we always fail */
 168:Src/syscalls.c **** 	return -1;
 433              		.loc 1 168 2 is_stmt 1 view .LVU84
 169:Src/syscalls.c **** }
 434              		.loc 1 169 1 is_stmt 0 view .LVU85
 435 0002 4FF0FF30 		mov	r0, #-1
 436              	.LVL29:
 437              		.loc 1 169 1 view .LVU86
 438 0006 03B0     		add	sp, sp, #12
 439              	.LCFI6:
 440              		.cfi_restore 3
 441              		.cfi_restore 2
 442              		.cfi_restore 1
 443              		.cfi_def_cfa_offset 0
 444 0008 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE36:
 448              		.section	.text._wait,"ax",%progbits
 449              		.align	1
 450              		.global	_wait
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv4-sp-d16
 456              	_wait:
 457              	.LVL30:
 458              	.LFB37:
 170:Src/syscalls.c **** 
 171:Src/syscalls.c **** int _wait(int *status)
 172:Src/syscalls.c **** {
 459              		.loc 1 172 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		.loc 1 172 1 is_stmt 0 view .LVU88
 464 0000 08B5     		push	{r3, lr}
 465              	.LCFI7:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 3, -8
 468              		.cfi_offset 14, -4
 173:Src/syscalls.c **** 	errno = ECHILD;
 469              		.loc 1 173 2 is_stmt 1 view .LVU89
 470 0002 FFF7FEFF 		bl	__errno
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 12


 471              	.LVL31:
 472              		.loc 1 173 8 is_stmt 0 view .LVU90
 473 0006 0A23     		movs	r3, #10
 474 0008 0360     		str	r3, [r0]
 174:Src/syscalls.c **** 	return -1;
 475              		.loc 1 174 2 is_stmt 1 view .LVU91
 175:Src/syscalls.c **** }
 476              		.loc 1 175 1 is_stmt 0 view .LVU92
 477 000a 4FF0FF30 		mov	r0, #-1
 478 000e 08BD     		pop	{r3, pc}
 479              		.cfi_endproc
 480              	.LFE37:
 482              		.section	.text._unlink,"ax",%progbits
 483              		.align	1
 484              		.global	_unlink
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu fpv4-sp-d16
 490              	_unlink:
 491              	.LVL32:
 492              	.LFB38:
 176:Src/syscalls.c **** 
 177:Src/syscalls.c **** int _unlink(char *name)
 178:Src/syscalls.c **** {
 493              		.loc 1 178 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		.loc 1 178 1 is_stmt 0 view .LVU94
 498 0000 08B5     		push	{r3, lr}
 499              	.LCFI8:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 3, -8
 502              		.cfi_offset 14, -4
 179:Src/syscalls.c **** 	errno = ENOENT;
 503              		.loc 1 179 2 is_stmt 1 view .LVU95
 504 0002 FFF7FEFF 		bl	__errno
 505              	.LVL33:
 506              		.loc 1 179 8 is_stmt 0 view .LVU96
 507 0006 0223     		movs	r3, #2
 508 0008 0360     		str	r3, [r0]
 180:Src/syscalls.c **** 	return -1;
 509              		.loc 1 180 2 is_stmt 1 view .LVU97
 181:Src/syscalls.c **** }
 510              		.loc 1 181 1 is_stmt 0 view .LVU98
 511 000a 4FF0FF30 		mov	r0, #-1
 512 000e 08BD     		pop	{r3, pc}
 513              		.cfi_endproc
 514              	.LFE38:
 516              		.section	.text._times,"ax",%progbits
 517              		.align	1
 518              		.global	_times
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv4-sp-d16
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 13


 524              	_times:
 525              	.LVL34:
 526              	.LFB39:
 182:Src/syscalls.c **** 
 183:Src/syscalls.c **** int _times(struct tms *buf)
 184:Src/syscalls.c **** {
 527              		.loc 1 184 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 185:Src/syscalls.c **** 	return -1;
 532              		.loc 1 185 2 view .LVU100
 186:Src/syscalls.c **** }
 533              		.loc 1 186 1 is_stmt 0 view .LVU101
 534 0000 4FF0FF30 		mov	r0, #-1
 535              	.LVL35:
 536              		.loc 1 186 1 view .LVU102
 537 0004 7047     		bx	lr
 538              		.cfi_endproc
 539              	.LFE39:
 541              		.section	.text._stat,"ax",%progbits
 542              		.align	1
 543              		.global	_stat
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv4-sp-d16
 549              	_stat:
 550              	.LVL36:
 551              	.LFB40:
 187:Src/syscalls.c **** 
 188:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 189:Src/syscalls.c **** {
 552              		.loc 1 189 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 190:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 557              		.loc 1 190 2 view .LVU104
 558              		.loc 1 190 14 is_stmt 0 view .LVU105
 559 0000 4FF40053 		mov	r3, #8192
 560 0004 4B60     		str	r3, [r1, #4]
 191:Src/syscalls.c **** 	return 0;
 561              		.loc 1 191 2 is_stmt 1 view .LVU106
 192:Src/syscalls.c **** }
 562              		.loc 1 192 1 is_stmt 0 view .LVU107
 563 0006 0020     		movs	r0, #0
 564              	.LVL37:
 565              		.loc 1 192 1 view .LVU108
 566 0008 7047     		bx	lr
 567              		.cfi_endproc
 568              	.LFE40:
 570              		.section	.text._link,"ax",%progbits
 571              		.align	1
 572              		.global	_link
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 14


 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	_link:
 579              	.LVL38:
 580              	.LFB41:
 193:Src/syscalls.c **** 
 194:Src/syscalls.c **** int _link(char *old, char *new)
 195:Src/syscalls.c **** {
 581              		.loc 1 195 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		.loc 1 195 1 is_stmt 0 view .LVU110
 586 0000 08B5     		push	{r3, lr}
 587              	.LCFI9:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 3, -8
 590              		.cfi_offset 14, -4
 196:Src/syscalls.c **** 	errno = EMLINK;
 591              		.loc 1 196 2 is_stmt 1 view .LVU111
 592 0002 FFF7FEFF 		bl	__errno
 593              	.LVL39:
 594              		.loc 1 196 8 is_stmt 0 view .LVU112
 595 0006 1F23     		movs	r3, #31
 596 0008 0360     		str	r3, [r0]
 197:Src/syscalls.c **** 	return -1;
 597              		.loc 1 197 2 is_stmt 1 view .LVU113
 198:Src/syscalls.c **** }
 598              		.loc 1 198 1 is_stmt 0 view .LVU114
 599 000a 4FF0FF30 		mov	r0, #-1
 600 000e 08BD     		pop	{r3, pc}
 601              		.cfi_endproc
 602              	.LFE41:
 604              		.section	.text._fork,"ax",%progbits
 605              		.align	1
 606              		.global	_fork
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	_fork:
 613              	.LFB42:
 199:Src/syscalls.c **** 
 200:Src/syscalls.c **** int _fork(void)
 201:Src/syscalls.c **** {
 614              		.loc 1 201 1 is_stmt 1 view -0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618 0000 08B5     		push	{r3, lr}
 619              	.LCFI10:
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 3, -8
 622              		.cfi_offset 14, -4
 202:Src/syscalls.c **** 	errno = EAGAIN;
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 15


 623              		.loc 1 202 2 view .LVU116
 624 0002 FFF7FEFF 		bl	__errno
 625              	.LVL40:
 626              		.loc 1 202 8 is_stmt 0 view .LVU117
 627 0006 0B23     		movs	r3, #11
 628 0008 0360     		str	r3, [r0]
 203:Src/syscalls.c **** 	return -1;
 629              		.loc 1 203 2 is_stmt 1 view .LVU118
 204:Src/syscalls.c **** }
 630              		.loc 1 204 1 is_stmt 0 view .LVU119
 631 000a 4FF0FF30 		mov	r0, #-1
 632 000e 08BD     		pop	{r3, pc}
 633              		.cfi_endproc
 634              	.LFE42:
 636              		.section	.text._execve,"ax",%progbits
 637              		.align	1
 638              		.global	_execve
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	_execve:
 645              	.LVL41:
 646              	.LFB43:
 205:Src/syscalls.c **** 
 206:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 207:Src/syscalls.c **** {
 647              		.loc 1 207 1 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		.loc 1 207 1 is_stmt 0 view .LVU121
 652 0000 08B5     		push	{r3, lr}
 653              	.LCFI11:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 3, -8
 656              		.cfi_offset 14, -4
 208:Src/syscalls.c **** 	errno = ENOMEM;
 657              		.loc 1 208 2 is_stmt 1 view .LVU122
 658 0002 FFF7FEFF 		bl	__errno
 659              	.LVL42:
 660              		.loc 1 208 8 is_stmt 0 view .LVU123
 661 0006 0C23     		movs	r3, #12
 662 0008 0360     		str	r3, [r0]
 209:Src/syscalls.c **** 	return -1;
 663              		.loc 1 209 2 is_stmt 1 view .LVU124
 210:Src/syscalls.c **** }
 664              		.loc 1 210 1 is_stmt 0 view .LVU125
 665 000a 4FF0FF30 		mov	r0, #-1
 666 000e 08BD     		pop	{r3, pc}
 667              		.cfi_endproc
 668              	.LFE43:
 670              		.global	environ
 671              		.global	__env
 672              		.section	.bss.__env,"aw",%nobits
 673              		.align	2
 676              	__env:
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 16


 677 0000 00000000 		.space	4
 678              		.section	.bss.heap_end.7381,"aw",%nobits
 679              		.align	2
 680              		.set	.LANCHOR0,. + 0
 683              	heap_end.7381:
 684 0000 00000000 		.space	4
 685              		.section	.data.environ,"aw"
 686              		.align	2
 689              	environ:
 690 0000 00000000 		.word	__env
 691              		.weak	__io_putchar
 692              		.weak	__io_getchar
 693              		.text
 694              	.Letext0:
 695              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 696              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 697              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 698              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 699              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 700              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 701              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 702              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 703              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 704              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 705              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 706              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 707              		.file 14 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
ARM GAS  C:\cygwin64\tmp\ccokQRJh.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
C:\cygwin64\tmp\ccokQRJh.s:18     .text.initialise_monitor_handles:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:26     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
C:\cygwin64\tmp\ccokQRJh.s:40     .text._getpid:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:47     .text._getpid:00000000 _getpid
C:\cygwin64\tmp\ccokQRJh.s:62     .text._kill:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:69     .text._kill:00000000 _kill
C:\cygwin64\tmp\ccokQRJh.s:96     .text._exit:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:103    .text._exit:00000000 _exit
C:\cygwin64\tmp\ccokQRJh.s:130    .text._read:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:137    .text._read:00000000 _read
C:\cygwin64\tmp\ccokQRJh.s:166    .text._write:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:173    .text._write:00000000 _write
C:\cygwin64\tmp\ccokQRJh.s:225    .text._sbrk:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:232    .text._sbrk:00000000 _sbrk
C:\cygwin64\tmp\ccokQRJh.s:301    .text._sbrk:00000034 $d
C:\cygwin64\tmp\ccokQRJh.s:307    .text._close:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:314    .text._close:00000000 _close
C:\cygwin64\tmp\ccokQRJh.s:332    .text._fstat:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:339    .text._fstat:00000000 _fstat
C:\cygwin64\tmp\ccokQRJh.s:361    .text._isatty:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:368    .text._isatty:00000000 _isatty
C:\cygwin64\tmp\ccokQRJh.s:386    .text._lseek:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:393    .text._lseek:00000000 _lseek
C:\cygwin64\tmp\ccokQRJh.s:411    .text._open:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:418    .text._open:00000000 _open
C:\cygwin64\tmp\ccokQRJh.s:449    .text._wait:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:456    .text._wait:00000000 _wait
C:\cygwin64\tmp\ccokQRJh.s:483    .text._unlink:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:490    .text._unlink:00000000 _unlink
C:\cygwin64\tmp\ccokQRJh.s:517    .text._times:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:524    .text._times:00000000 _times
C:\cygwin64\tmp\ccokQRJh.s:542    .text._stat:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:549    .text._stat:00000000 _stat
C:\cygwin64\tmp\ccokQRJh.s:571    .text._link:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:578    .text._link:00000000 _link
C:\cygwin64\tmp\ccokQRJh.s:605    .text._fork:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:612    .text._fork:00000000 _fork
C:\cygwin64\tmp\ccokQRJh.s:637    .text._execve:00000000 $t
C:\cygwin64\tmp\ccokQRJh.s:644    .text._execve:00000000 _execve
C:\cygwin64\tmp\ccokQRJh.s:689    .data.environ:00000000 environ
C:\cygwin64\tmp\ccokQRJh.s:676    .bss.__env:00000000 __env
C:\cygwin64\tmp\ccokQRJh.s:673    .bss.__env:00000000 $d
C:\cygwin64\tmp\ccokQRJh.s:679    .bss.heap_end.7381:00000000 $d
C:\cygwin64\tmp\ccokQRJh.s:683    .bss.heap_end.7381:00000000 heap_end.7381
C:\cygwin64\tmp\ccokQRJh.s:686    .data.environ:00000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
end
